{"ast":null,"code":"/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar events = require('events'),\n  util = require('util'),\n  EventEmitter = events.EventEmitter,\n  ErrorCodes = require('./ErrorCodes'),\n  bufferUtil = require('./BufferUtil').BufferUtil;\n\n/**\n * HyBi Sender implementation\n */\n\nfunction Sender(socket) {\n  this._socket = socket;\n  this.firstFragment = true;\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Sender, events.EventEmitter);\n\n/**\n * Sends a close instruction to the remote party.\n *\n * @api public\n */\n\nSender.prototype.close = function (code, data, mask) {\n  if (typeof code !== 'undefined') {\n    if (typeof code !== 'number' || !ErrorCodes.isValidErrorCode(code)) throw new Error('first argument must be a valid error code number');\n  }\n  code = code || 1000;\n  var dataBuffer = new Buffer(2 + (data ? Buffer.byteLength(data) : 0));\n  writeUInt16BE.call(dataBuffer, code, 0);\n  if (dataBuffer.length > 2) dataBuffer.write(data, 2);\n  this.frameAndSend(0x8, dataBuffer, true, mask);\n};\n\n/**\n * Sends a ping message to the remote party.\n *\n * @api public\n */\n\nSender.prototype.ping = function (data, options) {\n  var mask = options && options.mask;\n  this.frameAndSend(0x9, data || '', true, mask);\n};\n\n/**\n * Sends a pong message to the remote party.\n *\n * @api public\n */\n\nSender.prototype.pong = function (data, options) {\n  var mask = options && options.mask;\n  this.frameAndSend(0xa, data || '', true, mask);\n};\n\n/**\n * Sends text or binary data to the remote party.\n *\n * @api public\n */\n\nSender.prototype.send = function (data, options, cb) {\n  var finalFragment = options && options.fin === false ? false : true;\n  var mask = options && options.mask;\n  var opcode = options && options.binary ? 2 : 1;\n  if (this.firstFragment === false) opcode = 0;else this.firstFragment = false;\n  if (finalFragment) this.firstFragment = true;\n  this.frameAndSend(opcode, data, finalFragment, mask, cb);\n};\n\n/**\n * Frames and sends a piece of data according to the HyBi WebSocket protocol.\n *\n * @api private\n */\n\nSender.prototype.frameAndSend = function (opcode, data, finalFragment, maskData, cb) {\n  var canModifyData = false;\n  if (!data) {\n    try {\n      this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);\n    } catch (e) {\n      if (typeof cb == 'function') cb(e);else this.emit('error', e);\n    }\n    return;\n  }\n  if (!Buffer.isBuffer(data)) {\n    canModifyData = true;\n    if (data && (typeof data.byteLength !== 'undefined' || typeof data.buffer !== 'undefined')) {\n      data = getArrayBuffer(data);\n    } else {\n      data = new Buffer(data);\n    }\n  }\n  var dataLength = data.length,\n    dataOffset = maskData ? 6 : 2,\n    secondByte = dataLength;\n  if (dataLength >= 65536) {\n    dataOffset += 8;\n    secondByte = 127;\n  } else if (dataLength > 125) {\n    dataOffset += 2;\n    secondByte = 126;\n  }\n  var mergeBuffers = dataLength < 32768 || maskData && !canModifyData;\n  var totalLength = mergeBuffers ? dataLength + dataOffset : dataOffset;\n  var outputBuffer = new Buffer(totalLength);\n  outputBuffer[0] = finalFragment ? opcode | 0x80 : opcode;\n  switch (secondByte) {\n    case 126:\n      writeUInt16BE.call(outputBuffer, dataLength, 2);\n      break;\n    case 127:\n      writeUInt32BE.call(outputBuffer, 0, 2);\n      writeUInt32BE.call(outputBuffer, dataLength, 6);\n  }\n  if (maskData) {\n    outputBuffer[1] = secondByte | 0x80;\n    var mask = this._randomMask || (this._randomMask = getRandomMask());\n    outputBuffer[dataOffset - 4] = mask[0];\n    outputBuffer[dataOffset - 3] = mask[1];\n    outputBuffer[dataOffset - 2] = mask[2];\n    outputBuffer[dataOffset - 1] = mask[3];\n    if (mergeBuffers) {\n      bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);\n      try {\n        this._socket.write(outputBuffer, 'binary', cb);\n      } catch (e) {\n        if (typeof cb == 'function') cb(e);else this.emit('error', e);\n      }\n    } else {\n      bufferUtil.mask(data, mask, data, 0, dataLength);\n      try {\n        this._socket.write(outputBuffer, 'binary');\n        this._socket.write(data, 'binary', cb);\n      } catch (e) {\n        if (typeof cb == 'function') cb(e);else this.emit('error', e);\n      }\n    }\n  } else {\n    outputBuffer[1] = secondByte;\n    if (mergeBuffers) {\n      data.copy(outputBuffer, dataOffset);\n      try {\n        this._socket.write(outputBuffer, 'binary', cb);\n      } catch (e) {\n        if (typeof cb == 'function') cb(e);else this.emit('error', e);\n      }\n    } else {\n      try {\n        this._socket.write(outputBuffer, 'binary');\n        this._socket.write(data, 'binary', cb);\n      } catch (e) {\n        if (typeof cb == 'function') cb(e);else this.emit('error', e);\n      }\n    }\n  }\n};\nmodule.exports = Sender;\nfunction writeUInt16BE(value, offset) {\n  this[offset] = (value & 0xff00) >> 8;\n  this[offset + 1] = value & 0xff;\n}\nfunction writeUInt32BE(value, offset) {\n  this[offset] = (value & 0xff000000) >> 24;\n  this[offset + 1] = (value & 0xff0000) >> 16;\n  this[offset + 2] = (value & 0xff00) >> 8;\n  this[offset + 3] = value & 0xff;\n}\nfunction getArrayBuffer(data) {\n  // data is either an ArrayBuffer or ArrayBufferView.\n  var array = new Uint8Array(data.buffer || data),\n    l = data.byteLength || data.length,\n    o = data.byteOffset || 0,\n    buffer = new Buffer(l);\n  for (var i = 0; i < l; ++i) {\n    buffer[i] = array[o + i];\n  }\n  return buffer;\n}\nfunction getRandomMask() {\n  return new Buffer([~~(Math.random() * 255), ~~(Math.random() * 255), ~~(Math.random() * 255), ~~(Math.random() * 255)]);\n}","map":{"version":3,"names":["events","require","util","EventEmitter","ErrorCodes","bufferUtil","BufferUtil","Sender","socket","_socket","firstFragment","inherits","prototype","close","code","data","mask","isValidErrorCode","Error","dataBuffer","Buffer","byteLength","writeUInt16BE","call","length","write","frameAndSend","ping","options","pong","send","cb","finalFragment","fin","opcode","binary","maskData","canModifyData","concat","e","emit","isBuffer","buffer","getArrayBuffer","dataLength","dataOffset","secondByte","mergeBuffers","totalLength","outputBuffer","writeUInt32BE","_randomMask","getRandomMask","copy","module","exports","value","offset","array","Uint8Array","l","o","byteOffset","i","Math","random"],"sources":["D:/Deneme/my-app/node_modules/express-ws/node_modules/ws/lib/Sender.js"],"sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar events = require('events')\n  , util = require('util')\n  , EventEmitter = events.EventEmitter\n  , ErrorCodes = require('./ErrorCodes')\n  , bufferUtil = require('./BufferUtil').BufferUtil;\n\n/**\n * HyBi Sender implementation\n */\n\nfunction Sender(socket) {\n  this._socket = socket;\n  this.firstFragment = true;\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Sender, events.EventEmitter);\n\n/**\n * Sends a close instruction to the remote party.\n *\n * @api public\n */\n\nSender.prototype.close = function(code, data, mask) {\n  if (typeof code !== 'undefined') {\n    if (typeof code !== 'number' ||\n      !ErrorCodes.isValidErrorCode(code)) throw new Error('first argument must be a valid error code number');\n  }\n  code = code || 1000;\n  var dataBuffer = new Buffer(2 + (data ? Buffer.byteLength(data) : 0));\n  writeUInt16BE.call(dataBuffer, code, 0);\n  if (dataBuffer.length > 2) dataBuffer.write(data, 2);\n  this.frameAndSend(0x8, dataBuffer, true, mask);\n};\n\n/**\n * Sends a ping message to the remote party.\n *\n * @api public\n */\n\nSender.prototype.ping = function(data, options) {\n  var mask = options && options.mask;\n  this.frameAndSend(0x9, data || '', true, mask);\n};\n\n/**\n * Sends a pong message to the remote party.\n *\n * @api public\n */\n\nSender.prototype.pong = function(data, options) {\n  var mask = options && options.mask;\n  this.frameAndSend(0xa, data || '', true, mask);\n};\n\n/**\n * Sends text or binary data to the remote party.\n *\n * @api public\n */\n\nSender.prototype.send = function(data, options, cb) {\n  var finalFragment = options && options.fin === false ? false : true;\n  var mask = options && options.mask;\n  var opcode = options && options.binary ? 2 : 1;\n  if (this.firstFragment === false) opcode = 0;\n  else this.firstFragment = false;\n  if (finalFragment) this.firstFragment = true\n  this.frameAndSend(opcode, data, finalFragment, mask, cb);\n};\n\n/**\n * Frames and sends a piece of data according to the HyBi WebSocket protocol.\n *\n * @api private\n */\n\nSender.prototype.frameAndSend = function(opcode, data, finalFragment, maskData, cb) {\n  var canModifyData = false;\n\n  if (!data) {\n    try {\n      this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);\n    }\n    catch (e) {\n      if (typeof cb == 'function') cb(e);\n      else this.emit('error', e);\n    }\n    return;\n  }\n\n  if (!Buffer.isBuffer(data)) {\n    canModifyData = true;\n    if (data && (typeof data.byteLength !== 'undefined' || typeof data.buffer !== 'undefined')) {\n      data = getArrayBuffer(data);\n    } else {\n      data = new Buffer(data);\n    }\n  }\n\n  var dataLength = data.length\n    , dataOffset = maskData ? 6 : 2\n    , secondByte = dataLength;\n\n  if (dataLength >= 65536) {\n    dataOffset += 8;\n    secondByte = 127;\n  }\n  else if (dataLength > 125) {\n    dataOffset += 2;\n    secondByte = 126;\n  }\n\n  var mergeBuffers = dataLength < 32768 || (maskData && !canModifyData);\n  var totalLength = mergeBuffers ? dataLength + dataOffset : dataOffset;\n  var outputBuffer = new Buffer(totalLength);\n  outputBuffer[0] = finalFragment ? opcode | 0x80 : opcode;\n\n  switch (secondByte) {\n    case 126:\n      writeUInt16BE.call(outputBuffer, dataLength, 2);\n      break;\n    case 127:\n      writeUInt32BE.call(outputBuffer, 0, 2);\n      writeUInt32BE.call(outputBuffer, dataLength, 6);\n  }\n\n  if (maskData) {\n    outputBuffer[1] = secondByte | 0x80;\n    var mask = this._randomMask || (this._randomMask = getRandomMask());\n    outputBuffer[dataOffset - 4] = mask[0];\n    outputBuffer[dataOffset - 3] = mask[1];\n    outputBuffer[dataOffset - 2] = mask[2];\n    outputBuffer[dataOffset - 1] = mask[3];\n    if (mergeBuffers) {\n      bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);\n      try {\n        this._socket.write(outputBuffer, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n    else {\n      bufferUtil.mask(data, mask, data, 0, dataLength);\n      try {\n        this._socket.write(outputBuffer, 'binary');\n        this._socket.write(data, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n  }\n  else {\n    outputBuffer[1] = secondByte;\n    if (mergeBuffers) {\n      data.copy(outputBuffer, dataOffset);\n      try {\n        this._socket.write(outputBuffer, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n    else {\n      try {\n        this._socket.write(outputBuffer, 'binary');\n        this._socket.write(data, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n  }\n};\n\nmodule.exports = Sender;\n\nfunction writeUInt16BE(value, offset) {\n  this[offset] = (value & 0xff00)>>8;\n  this[offset+1] = value & 0xff;\n}\n\nfunction writeUInt32BE(value, offset) {\n  this[offset] = (value & 0xff000000)>>24;\n  this[offset+1] = (value & 0xff0000)>>16;\n  this[offset+2] = (value & 0xff00)>>8;\n  this[offset+3] = value & 0xff;\n}\n\nfunction getArrayBuffer(data) {\n  // data is either an ArrayBuffer or ArrayBufferView.\n  var array = new Uint8Array(data.buffer || data)\n    , l = data.byteLength || data.length\n    , o = data.byteOffset || 0\n    , buffer = new Buffer(l);\n  for (var i = 0; i < l; ++i) {\n    buffer[i] = array[o+i];\n  }\n  return buffer;\n}\n\nfunction getRandomMask() {\n  return new Buffer([\n    ~~(Math.random() * 255),\n    ~~(Math.random() * 255),\n    ~~(Math.random() * 255),\n    ~~(Math.random() * 255)\n  ]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}