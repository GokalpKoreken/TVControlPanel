{"ast":null,"code":"const net = require(\"net-browserify\");\nconst socket = new net.Socket();\nsocket.connect(5000, \"localhost\", () => {\n  console.log(\"Connected to server\");\n});\nsocket.on(\"data\", data => {\n  const strData = data.toString();\n  console.log(`Received: ${strData}`);\n});\nsocket.on(\"end\", () => {\n  console.log(\"Disconnected from server\");\n});\nsocket.on(\"error\", error => {\n  console.log(`Socket Error: ${error.message}`);\n});\nconst sendData = data => {\n  socket.write(data);\n};\nexport { sendData };","map":{"version":3,"names":["net","require","socket","Socket","connect","console","log","on","data","strData","toString","error","message","sendData","write"],"sources":["D:/Deneme/my-app/src/components/client.js"],"sourcesContent":["const net = require(\"net-browserify\");\r\n\r\nconst socket = new net.Socket();\r\n\r\nsocket.connect(5000, \"localhost\", () => {\r\n  console.log(\"Connected to server\");\r\n});\r\n\r\nsocket.on(\"data\", (data) => {\r\n  const strData = data.toString();\r\n  console.log(`Received: ${strData}`);\r\n});\r\n\r\nsocket.on(\"end\", () => {\r\n  console.log(\"Disconnected from server\");\r\n});\r\n\r\nsocket.on(\"error\", (error) => {\r\n  console.log(`Socket Error: ${error.message}`);\r\n});\r\n\r\nconst sendData = (data) => {\r\n  socket.write(data);\r\n};\r\n\r\nexport { sendData };\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAErC,MAAMC,MAAM,GAAG,IAAIF,GAAG,CAACG,MAAM,CAAC,CAAC;AAE/BD,MAAM,CAACE,OAAO,CAAC,IAAI,EAAE,WAAW,EAAE,MAAM;EACtCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;AACpC,CAAC,CAAC;AAEFJ,MAAM,CAACK,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAK;EAC1B,MAAMC,OAAO,GAAGD,IAAI,CAACE,QAAQ,CAAC,CAAC;EAC/BL,OAAO,CAACC,GAAG,CAAE,aAAYG,OAAQ,EAAC,CAAC;AACrC,CAAC,CAAC;AAEFP,MAAM,CAACK,EAAE,CAAC,KAAK,EAAE,MAAM;EACrBF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;AACzC,CAAC,CAAC;AAEFJ,MAAM,CAACK,EAAE,CAAC,OAAO,EAAGI,KAAK,IAAK;EAC5BN,OAAO,CAACC,GAAG,CAAE,iBAAgBK,KAAK,CAACC,OAAQ,EAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAIL,IAAI,IAAK;EACzBN,MAAM,CAACY,KAAK,CAACN,IAAI,CAAC;AACpB,CAAC;AAED,SAASK,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}