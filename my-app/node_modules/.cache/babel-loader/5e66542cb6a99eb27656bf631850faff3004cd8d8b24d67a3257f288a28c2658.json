{"ast":null,"code":"var _jsxFileName = \"D:\\\\Deneme\\\\my-app\\\\src\\\\components\\\\Pages\\\\SoundControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SoundControl.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoundControl = () => {\n  _s();\n  const [volume, setVolume] = useState(50);\n  const [mute, setMute] = useState(false);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const host = '127.0.0.1';\n    const port = 5000;\n    const client = new WebSocket(`ws://${host}:${port}`);\n    client.onopen = () => {\n      console.log('Connected');\n    };\n    client.onmessage = event => {\n      console.log(`Received: ${event.data}`);\n      const receivedData = JSON.parse(event.data);\n      if (receivedData.volume) {\n        setVolume(receivedData.volume);\n      }\n      if (receivedData.mute !== undefined) {\n        setMute(receivedData.mute);\n      }\n    };\n    client.onerror = error => {\n      console.log(`Error: ${error.message}`);\n    };\n    client.onclose = () => {\n      console.log('Connection closed');\n    };\n    setSocket(client);\n    return () => {\n      client.close();\n    };\n  }, []);\n  const handleVolumeChange = event => {\n    const newVolume = event.target.value;\n    setVolume(newVolume);\n    if (socket) {\n      const message = {\n        command: 'setVolume',\n        volume: newVolume\n      };\n      socket.send(JSON.stringify(message));\n    }\n  };\n  const handleMuteToggle = () => {\n    const newMute = !mute;\n    setMute(newMute);\n    if (socket) {\n      const message = {\n        command: 'setMute',\n        mute: newMute\n      };\n      socket.send(JSON.stringify(message));\n    }\n  };\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'name',\n    headerName: 'Name',\n    width: 150\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 200\n  }];\n  const rows = [{\n    id: 1,\n    name: 'Item 1',\n    description: 'Description 1'\n  }, {\n    id: 2,\n    name: 'Item 2',\n    description: 'Description 2'\n  }, {\n    id: 3,\n    name: 'Item 3',\n    description: 'Description 3'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sound Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-control-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Volume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: volume,\n          onChange: handleVolumeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: volume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mute-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mute:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: mute,\n          onChange: handleMuteToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(SoundControl, \"1rzl2WeFR8iHvoiBNFfQBSnynnI=\");\n_c = SoundControl;\nexport default SoundControl;\nvar _c;\n$RefreshReg$(_c, \"SoundControl\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SoundControl","_s","volume","setVolume","mute","setMute","socket","setSocket","host","port","client","WebSocket","onopen","console","log","onmessage","event","data","receivedData","JSON","parse","undefined","onerror","error","message","onclose","close","handleVolumeChange","newVolume","target","value","command","send","stringify","handleMuteToggle","newMute","columns","field","headerName","width","rows","id","name","description","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","min","max","onChange","checked","style","height","_c","$RefreshReg$"],"sources":["D:/Deneme/my-app/src/components/Pages/SoundControl.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SoundControl.css';\r\n\r\nconst SoundControl = () => {\r\n  const [volume, setVolume] = useState(50);\r\n  const [mute, setMute] = useState(false);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const host = '127.0.0.1';\r\n    const port = 5000;\r\n    const client = new WebSocket(`ws://${host}:${port}`);\r\n\r\n    client.onopen = () => {\r\n      console.log('Connected');\r\n    };\r\n\r\n    client.onmessage = (event) => {\r\n      console.log(`Received: ${event.data}`);\r\n\r\n      const receivedData = JSON.parse(event.data);\r\n      if (receivedData.volume) {\r\n        setVolume(receivedData.volume);\r\n      }\r\n      if (receivedData.mute !== undefined) {\r\n        setMute(receivedData.mute);\r\n      }\r\n    };\r\n\r\n    client.onerror = (error) => {\r\n      console.log(`Error: ${error.message}`);\r\n    };\r\n\r\n    client.onclose = () => {\r\n      console.log('Connection closed');\r\n    };\r\n\r\n    setSocket(client);\r\n\r\n    return () => {\r\n      client.close();\r\n    };\r\n  }, []);\r\n\r\n  const handleVolumeChange = (event) => {\r\n    const newVolume = event.target.value;\r\n    setVolume(newVolume);\r\n\r\n    if (socket) {\r\n      const message = {\r\n        command: 'setVolume',\r\n        volume: newVolume,\r\n      };\r\n      socket.send(JSON.stringify(message));\r\n    }\r\n  };\r\n\r\n  const handleMuteToggle = () => {\r\n    const newMute = !mute;\r\n    setMute(newMute);\r\n\r\n    if (socket) {\r\n      const message = {\r\n        command: 'setMute',\r\n        mute: newMute,\r\n      };\r\n      socket.send(JSON.stringify(message));\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'name', headerName: 'Name', width: 150 },\r\n    { field: 'description', headerName: 'Description', width: 200 },\r\n  ];\r\n\r\n  const rows = [\r\n    { id: 1, name: 'Item 1', description: 'Description 1' },\r\n    { id: 2, name: 'Item 2', description: 'Description 2' },\r\n    { id: 3, name: 'Item 3', description: 'Description 3' },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sound Control</h2>\r\n      <div className=\"sound-control-container\">\r\n        <div className=\"volume-control\">\r\n          <label>Volume:</label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={volume}\r\n            onChange={handleVolumeChange}\r\n          />\r\n          <span>{volume}</span>\r\n        </div>\r\n        <div className=\"mute-control\">\r\n          <label>Mute:</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={mute}\r\n            onChange={handleMuteToggle}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 400, width: '100%' }}>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SoundControl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}