{"ast":null,"code":"var stream = require('stream');\nvar util = require('util');\nvar timers = require('timers');\nvar http = require('http');\nvar debug = util.debuglog('net');\nvar proxy = {\n  protocol: window.location.protocol == 'https:' ? 'wss' : 'ws',\n  hostname: window.location.hostname,\n  port: window.location.port,\n  path: '/api/vm/net'\n};\nfunction getProxy() {\n  return proxy;\n}\nfunction getProxyHost() {\n  var host = getProxy().hostname;\n  if (getProxy().port) {\n    host += ':' + getProxy().port;\n  }\n  return host;\n}\nfunction getProxyOrigin() {\n  return getProxy().protocol + '://' + getProxyHost();\n}\nexports.setProxy = function (options) {\n  options = options || {};\n  if (options.protocol) {\n    proxy.protocol = options.protocol;\n  }\n  if (options.hostname) {\n    proxy.hostname = options.hostname;\n  }\n  if (options.port) {\n    proxy.port = options.port;\n  }\n  if (options.path) {\n    proxy.path = options.path;\n  }\n};\nexports.createServer = function () {\n  throw new Error('Cannot create server in a browser');\n};\nexports.connect = exports.createConnection = function /* options, connectListener */\n() {\n  var args = normalizeConnectArgs(arguments);\n  debug('createConnection', args);\n  var s = new Socket(args[0]);\n  return Socket.prototype.connect.apply(s, args);\n};\nfunction toNumber(x) {\n  return (x = Number(x)) >= 0 ? x : false;\n}\nfunction isPipeName(s) {\n  return util.isString(s) && toNumber(s) === false;\n}\n\n// Returns an array [options] or [options, cb]\n// It is the same as the argument of Socket.prototype.connect().\nfunction normalizeConnectArgs(args) {\n  var options = {};\n  if (util.isObject(args[0])) {\n    // connect(options, [cb])\n    options = args[0];\n  } else if (isPipeName(args[0])) {\n    // connect(path, [cb]);\n    options.path = args[0];\n  } else {\n    // connect(port, [host], [cb])\n    options.port = args[0];\n    if (util.isString(args[1])) {\n      options.host = args[1];\n    }\n  }\n  var cb = args[args.length - 1];\n  return util.isFunction(cb) ? [options, cb] : [options];\n}\nexports._normalizeConnectArgs = normalizeConnectArgs;\nfunction Socket(options) {\n  if (!(this instanceof Socket)) return new Socket(options);\n  this._connecting = false;\n  this._host = null;\n  if (util.isNumber(options)) options = {\n    fd: options\n  }; // Legacy interface.\n  else if (util.isUndefined(options)) options = {};\n  stream.Duplex.call(this, options);\n\n  // these will be set once there is a connection\n  this.readable = this.writable = false;\n\n  // handle strings directly\n  this._writableState.decodeStrings = false;\n\n  // default to *not* allowing half open sockets\n  this.allowHalfOpen = options && options.allowHalfOpen || false;\n}\nutil.inherits(Socket, stream.Duplex);\nexports.Socket = Socket;\nexports.Stream = Socket; // Legacy naming.\n\nSocket.prototype.listen = function () {\n  throw new Error('Cannot listen in a browser');\n};\nSocket.prototype.setTimeout = function (msecs, callback) {\n  if (msecs > 0 && isFinite(msecs)) {\n    timers.enroll(this, msecs);\n    //timers._unrefActive(this);\n    if (callback) {\n      this.once('timeout', callback);\n    }\n  } else if (msecs === 0) {\n    timers.unenroll(this);\n    if (callback) {\n      this.removeListener('timeout', callback);\n    }\n  }\n};\nSocket.prototype._onTimeout = function () {\n  debug('_onTimeout');\n  this.emit('timeout');\n};\nSocket.prototype.setNoDelay = function (enable) {};\nSocket.prototype.setKeepAlive = function (setting, msecs) {};\nSocket.prototype.address = function () {\n  return {\n    address: this.remoteAddress,\n    port: this.remotePort,\n    family: this.remoteFamily\n  };\n};\nObject.defineProperty(Socket.prototype, 'readyState', {\n  get: function () {\n    if (this._connecting) {\n      return 'opening';\n    } else if (this.readable && this.writable) {\n      return 'open';\n    } else if (this.readable && !this.writable) {\n      return 'readOnly';\n    } else if (!this.readable && this.writable) {\n      return 'writeOnly';\n    } else {\n      return 'closed';\n    }\n  }\n});\nSocket.prototype.bufferSize = undefined;\nSocket.prototype._read = function () {};\nSocket.prototype.end = function (data, encoding) {\n  stream.Duplex.prototype.end.call(this, data, encoding);\n  this.writable = false;\n  if (this._ws) {\n    this._ws.close();\n  }\n\n  // just in case we're waiting for an EOF.\n  if (this.readable && !this._readableState.endEmitted) this.read(0);else maybeDestroy(this);\n};\n\n// Call whenever we set writable=false or readable=false\nfunction maybeDestroy(socket) {\n  if (!socket.readable && !socket.writable && !socket.destroyed && !socket._connecting && !socket._writableState.length) {\n    socket.destroy();\n  }\n}\nSocket.prototype.destroySoon = function () {\n  if (this.writable) this.end();\n  if (this._writableState.finished) this.destroy();else this.once('finish', this.destroy);\n};\nSocket.prototype.destroy = function (exception) {\n  debug('destroy', exception);\n  if (this.destroyed) {\n    return;\n  }\n  this._connecting = false;\n  this.readable = this.writable = false;\n  timers.unenroll(this);\n  debug('close');\n  this.destroyed = true;\n};\nSocket.prototype.remoteAddress = null;\nSocket.prototype.remoteFamily = null;\nSocket.prototype.remotePort = null;\n\n// Used for servers only - not here\nSocket.prototype.localAddress = null;\nSocket.prototype.localPort = null;\nSocket.prototype.bytesRead = 0;\nSocket.prototype.bytesWritten = 0;\nSocket.prototype._write = function (data, encoding, cb) {\n  var self = this;\n  cb = cb || function () {};\n\n  // If we are still connecting, then buffer this for later.\n  // The Writable logic will buffer up any more writes while\n  // waiting for this one to be done.\n  if (this._connecting) {\n    this._pendingData = data;\n    this._pendingEncoding = encoding;\n    this.once('connect', function () {\n      this._write(data, encoding, cb);\n    });\n    return;\n  }\n  this._pendingData = null;\n  this._pendingEncoding = '';\n  if (encoding == 'binary' && typeof data == 'string') {\n    //TODO: maybe apply this for all string inputs?\n    // Setting encoding is very important for binary data - otherwise the data gets modified\n    data = new Buffer(data, encoding);\n  }\n\n  // Send the data\n  this._ws.send(data);\n  process.nextTick(function () {\n    //console.log('[tcp] sent: ', data.toString(), data.length);\n    self.bytesWritten += data.length;\n    cb();\n  });\n};\nSocket.prototype.write = function (chunk, encoding, cb) {\n  if (!util.isString(chunk) && !util.isBuffer(chunk)) throw new TypeError('invalid data');\n  return stream.Duplex.prototype.write.apply(this, arguments);\n};\nSocket.prototype.connect = function (options, cb) {\n  var self = this;\n  if (!util.isObject(options)) {\n    // Old API:\n    // connect(port, [host], [cb])\n    // connect(path, [cb]);\n    var args = normalizeConnectArgs(arguments);\n    return Socket.prototype.connect.apply(this, args);\n  }\n  cb = cb || function () {};\n  if (this.write !== Socket.prototype.write) this.write = Socket.prototype.write;\n  if (options.path) {\n    throw new Error('options.path not supported in the browser');\n  }\n  self._connecting = true;\n  self.writable = true;\n  self._host = options.host;\n  var req = http.request({\n    hostname: getProxy().hostname,\n    port: getProxy().port,\n    path: getProxy().path + '/connect',\n    method: 'POST'\n  }, function (res) {\n    var json = '';\n    res.on('data', function (buf) {\n      json += buf;\n    });\n    res.on('end', function () {\n      var data = null;\n      try {\n        data = JSON.parse(json);\n      } catch (e) {\n        data = {\n          code: res.statusCode,\n          error: json\n        };\n      }\n      if (data.error) {\n        self.emit('error', 'Cannot open TCP connection [' + res.statusCode + ']: ' + data.error);\n        self.destroy();\n        return;\n      }\n      self.remoteAddress = data.remote.address;\n      self.remoteFamily = data.remote.family;\n      self.remotePort = data.remote.port;\n      self._connectWebSocket(data.token, function (err) {\n        if (err) {\n          cb(err);\n          return;\n        }\n        cb();\n      });\n    });\n  });\n  req.setHeader('Content-Type', 'application/json');\n  req.write(JSON.stringify(options));\n  req.end();\n  return this;\n};\nSocket.prototype._connectWebSocket = function (token, cb) {\n  var self = this;\n  if (self._ws) {\n    process.nextTick(function () {\n      cb();\n    });\n    return;\n  }\n  this._ws = new WebSocket(getProxyOrigin() + getProxy().path + '/socket?token=' + token);\n  this._handleWebsocket();\n  if (cb) {\n    self.on('connect', cb);\n  }\n};\nSocket.prototype._handleWebsocket = function () {\n  var self = this;\n  this._ws.addEventListener('open', function () {\n    //console.log('TCP OK');\n\n    self._connecting = false;\n    self.readable = true;\n    self.emit('connect');\n    self.read(0);\n  });\n  this._ws.addEventListener('error', function (e) {\n    // `e` doesn't contain anything useful (https://developer.mozilla.org/en/docs/WebSockets/Writing_WebSocket_client_applications#Connection_errors)\n    console.warn('TCP error', e);\n    self.emit('error', 'An error occured with the WebSocket');\n  });\n  this._ws.addEventListener('message', function (e) {\n    var contents = e.data;\n    var gotBuffer = function (buffer) {\n      //console.log('[tcp] received: ' + buffer.toString(), buffer.length);\n      self.bytesRead += buffer.length;\n      self.push(buffer);\n    };\n    if (typeof contents == 'string') {\n      var buffer = new Buffer(contents);\n      gotBuffer(buffer);\n    } else if (window.Blob && contents instanceof Blob) {\n      var fileReader = new FileReader();\n      fileReader.addEventListener('load', function (e) {\n        var buf = fileReader.result;\n        var arr = new Uint8Array(buf);\n        gotBuffer(new Buffer(arr));\n      });\n      fileReader.readAsArrayBuffer(contents);\n    } else {\n      console.warn('Cannot read TCP stream: unsupported message type', contents);\n    }\n  });\n  this._ws.addEventListener('close', function () {\n    if (self.readyState == 'open') {\n      //console.log('TCP closed');\n      self.destroy();\n    }\n  });\n};\nexports.isIP = function (input) {\n  if (exports.isIPv4(input)) {\n    return 4;\n  } else if (exports.isIPv6(input)) {\n    return 6;\n  } else {\n    return 0;\n  }\n};\nexports.isIPv4 = function (input) {\n  return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(input);\n};\nexports.isIPv6 = function (input) {\n  return /^(([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))$/.test(input);\n};","map":{"version":3,"names":["stream","require","util","timers","http","debug","debuglog","proxy","protocol","window","location","hostname","port","path","getProxy","getProxyHost","host","getProxyOrigin","exports","setProxy","options","createServer","Error","connect","createConnection","args","normalizeConnectArgs","arguments","s","Socket","prototype","apply","toNumber","x","Number","isPipeName","isString","isObject","cb","length","isFunction","_normalizeConnectArgs","_connecting","_host","isNumber","fd","isUndefined","Duplex","call","readable","writable","_writableState","decodeStrings","allowHalfOpen","inherits","Stream","listen","setTimeout","msecs","callback","isFinite","enroll","once","unenroll","removeListener","_onTimeout","emit","setNoDelay","enable","setKeepAlive","setting","address","remoteAddress","remotePort","family","remoteFamily","Object","defineProperty","get","bufferSize","undefined","_read","end","data","encoding","_ws","close","_readableState","endEmitted","read","maybeDestroy","socket","destroyed","destroy","destroySoon","finished","exception","localAddress","localPort","bytesRead","bytesWritten","_write","self","_pendingData","_pendingEncoding","Buffer","send","process","nextTick","write","chunk","isBuffer","TypeError","req","request","method","res","json","on","buf","JSON","parse","e","code","statusCode","error","remote","_connectWebSocket","token","err","setHeader","stringify","WebSocket","_handleWebsocket","addEventListener","console","warn","contents","gotBuffer","buffer","push","Blob","fileReader","FileReader","result","arr","Uint8Array","readAsArrayBuffer","readyState","isIP","input","isIPv4","isIPv6","test"],"sources":["D:/Deneme/my-app/node_modules/net-browserify/browser.js"],"sourcesContent":["var stream = require('stream');\nvar util = require('util');\nvar timers = require('timers');\nvar http = require('http');\n\nvar debug = util.debuglog('net');\n\nvar proxy = {\n\tprotocol: (window.location.protocol == 'https:') ? 'wss' : 'ws',\n\thostname: window.location.hostname,\n\tport: window.location.port,\n\tpath: '/api/vm/net'\n};\nfunction getProxy() {\n\treturn proxy;\n}\nfunction getProxyHost() {\n\tvar host = getProxy().hostname;\n\tif (getProxy().port) {\n\t\thost += ':'+getProxy().port;\n\t}\n\treturn host;\n}\nfunction getProxyOrigin() {\n\treturn getProxy().protocol + '://' + getProxyHost();\n}\nexports.setProxy = function (options) {\n\toptions = options || {};\n\n\tif (options.protocol) {\n\t\tproxy.protocol = options.protocol;\n\t}\n\tif (options.hostname) {\n\t\tproxy.hostname = options.hostname;\n\t}\n\tif (options.port) {\n\t\tproxy.port = options.port;\n\t}\n\tif (options.path) {\n\t\tproxy.path = options.path;\n\t}\n};\n\nexports.createServer = function () {\n\tthrow new Error('Cannot create server in a browser');\n};\n\nexports.connect = exports.createConnection = function (/* options, connectListener */) {\n\tvar args = normalizeConnectArgs(arguments);\n\tdebug('createConnection', args);\n\tvar s = new Socket(args[0]);\n\treturn Socket.prototype.connect.apply(s, args);\n};\n\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\n\nfunction isPipeName(s) {\n\treturn util.isString(s) && toNumber(s) === false;\n}\n\n// Returns an array [options] or [options, cb]\n// It is the same as the argument of Socket.prototype.connect().\nfunction normalizeConnectArgs(args) {\n\tvar options = {};\n\tif (util.isObject(args[0])) {\n\t\t// connect(options, [cb])\n\t\toptions = args[0];\n\t} else if (isPipeName(args[0])) {\n\t\t// connect(path, [cb]);\n\t\toptions.path = args[0];\n\t} else {\n\t\t// connect(port, [host], [cb])\n\t\toptions.port = args[0];\n\t\tif (util.isString(args[1])) {\n\t\t\toptions.host = args[1];\n\t\t}\n\t}\n\tvar cb = args[args.length - 1];\n\treturn util.isFunction(cb) ? [options, cb] : [options];\n}\nexports._normalizeConnectArgs = normalizeConnectArgs;\n\nfunction Socket(options) {\n\tif (!(this instanceof Socket)) return new Socket(options);\n\n\tthis._connecting = false;\n\tthis._host = null;\n\n\tif (util.isNumber(options))\n\t\toptions = { fd: options }; // Legacy interface.\n\telse if (util.isUndefined(options))\n\t\toptions = {};\n\n\tstream.Duplex.call(this, options);\n\n\t// these will be set once there is a connection\n\tthis.readable = this.writable = false;\n\n\t// handle strings directly\n\tthis._writableState.decodeStrings = false;\n\n\t// default to *not* allowing half open sockets\n\tthis.allowHalfOpen = options && options.allowHalfOpen || false;\n}\nutil.inherits(Socket, stream.Duplex);\n\nexports.Socket = Socket;\nexports.Stream = Socket; // Legacy naming.\n\nSocket.prototype.listen = function () {\n\tthrow new Error('Cannot listen in a browser');\n};\n\nSocket.prototype.setTimeout = function (msecs, callback) {\n\tif (msecs > 0 && isFinite(msecs)) {\n\t\ttimers.enroll(this, msecs);\n\t\t//timers._unrefActive(this);\n\t\tif (callback) {\n\t\t\tthis.once('timeout', callback);\n\t\t}\n\t} else if (msecs === 0) {\n\t\ttimers.unenroll(this);\n\t\tif (callback) {\n\t\t\tthis.removeListener('timeout', callback);\n\t\t}\n\t}\n};\n\nSocket.prototype._onTimeout = function () {\n\tdebug('_onTimeout');\n\tthis.emit('timeout');\n};\n\nSocket.prototype.setNoDelay = function (enable) {};\nSocket.prototype.setKeepAlive = function (setting, msecs) {};\n\nSocket.prototype.address = function () {\n\treturn {\n\t\taddress: this.remoteAddress,\n\t\tport: this.remotePort,\n\t\tfamily: this.remoteFamily\n\t};\n};\n\nObject.defineProperty(Socket.prototype, 'readyState', {\n\tget: function() {\n\t\tif (this._connecting) {\n\t\t\treturn 'opening';\n\t\t} else if (this.readable && this.writable) {\n\t\t\treturn 'open';\n\t\t} else if (this.readable && !this.writable) {\n\t\t\treturn 'readOnly';\n\t\t} else if (!this.readable && this.writable) {\n\t\t\treturn 'writeOnly';\n\t\t} else {\n\t\t\treturn 'closed';\n\t\t}\n\t}\n});\n\nSocket.prototype.bufferSize = undefined;\n\nSocket.prototype._read = function () {};\n\nSocket.prototype.end = function(data, encoding) {\n\tstream.Duplex.prototype.end.call(this, data, encoding);\n\tthis.writable = false;\n\n\tif (this._ws) {\n\t\tthis._ws.close();\n\t}\n\n\t// just in case we're waiting for an EOF.\n\tif (this.readable && !this._readableState.endEmitted)\n\t\tthis.read(0);\n\telse\n\t\tmaybeDestroy(this);\n};\n\n// Call whenever we set writable=false or readable=false\nfunction maybeDestroy(socket) {\n\tif (!socket.readable &&\n\t\t!socket.writable &&\n\t\t!socket.destroyed &&\n\t\t!socket._connecting &&\n\t\t!socket._writableState.length) {\n\t\tsocket.destroy();\n\t}\n}\n\nSocket.prototype.destroySoon = function() {\n\tif (this.writable)\n\t\tthis.end();\n\tif (this._writableState.finished)\n\t\tthis.destroy();\n\telse\n\t\tthis.once('finish', this.destroy);\n};\n\nSocket.prototype.destroy = function(exception) {\n\tdebug('destroy', exception);\n\t\n\tif (this.destroyed) {\n\t\treturn;\n\t}\n\n\tthis._connecting = false;\n\n\tthis.readable = this.writable = false;\n\n\ttimers.unenroll(this);\n\n\tdebug('close');\n\n\tthis.destroyed = true;\n};\n\nSocket.prototype.remoteAddress = null;\nSocket.prototype.remoteFamily = null;\nSocket.prototype.remotePort = null;\n\n// Used for servers only - not here\nSocket.prototype.localAddress = null;\nSocket.prototype.localPort = null;\n\nSocket.prototype.bytesRead = 0;\nSocket.prototype.bytesWritten = 0;\n\nSocket.prototype._write = function (data, encoding, cb) {\n\tvar self = this;\n\tcb = cb || function () {};\n\n\t// If we are still connecting, then buffer this for later.\n\t// The Writable logic will buffer up any more writes while\n\t// waiting for this one to be done.\n\tif (this._connecting) {\n\t\tthis._pendingData = data;\n\t\tthis._pendingEncoding = encoding;\n\t\tthis.once('connect', function() {\n\t\t\tthis._write(data, encoding, cb);\n\t\t});\n\t\treturn;\n\t}\n\tthis._pendingData = null;\n\tthis._pendingEncoding = '';\n\n\tif (encoding == 'binary' && typeof data == 'string') { //TODO: maybe apply this for all string inputs?\n\t\t// Setting encoding is very important for binary data - otherwise the data gets modified\n\t\tdata = new Buffer(data, encoding);\n\t}\n\n\t// Send the data\n\tthis._ws.send(data);\n\n\tprocess.nextTick(function () {\n\t\t//console.log('[tcp] sent: ', data.toString(), data.length);\n\t\tself.bytesWritten += data.length;\n\t\tcb();\n\t});\n};\n\nSocket.prototype.write = function(chunk, encoding, cb) {\n\tif (!util.isString(chunk) && !util.isBuffer(chunk))\n\t\tthrow new TypeError('invalid data');\n\treturn stream.Duplex.prototype.write.apply(this, arguments);\n};\n\nSocket.prototype.connect = function(options, cb) {\n\tvar self = this;\n\t\n\tif (!util.isObject(options)) {\n\t\t// Old API:\n\t\t// connect(port, [host], [cb])\n\t\t// connect(path, [cb]);\n\t\tvar args = normalizeConnectArgs(arguments);\n\t\treturn Socket.prototype.connect.apply(this, args);\n\t}\n\n\tcb = cb || function () {};\n\n\tif (this.write !== Socket.prototype.write)\n\t\tthis.write = Socket.prototype.write;\n\n\tif (options.path) {\n\t\tthrow new Error('options.path not supported in the browser');\n\t}\n\n\tself._connecting = true;\n\tself.writable = true;\n\tself._host = options.host;\n\n\tvar req = http.request({\n\t\thostname: getProxy().hostname,\n\t\tport: getProxy().port,\n\t\tpath: getProxy().path + '/connect',\n\t\tmethod: 'POST'\n\t}, function (res) {\n\t\tvar json = '';\n\t\tres.on('data', function (buf) {\n\t\t\tjson += buf;\n\t\t});\n\t\tres.on('end', function () {\n\t\t\tvar data = null;\n\t\t\ttry {\n\t\t\t\tdata = JSON.parse(json);\n\t\t\t} catch (e) {\n\t\t\t\tdata = {\n\t\t\t\t\tcode: res.statusCode,\n\t\t\t\t\terror: json\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (data.error) {\n\t\t\t\tself.emit('error', 'Cannot open TCP connection ['+res.statusCode+']: '+data.error);\n\t\t\t\tself.destroy();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.remoteAddress = data.remote.address;\n\t\t\tself.remoteFamily = data.remote.family;\n\t\t\tself.remotePort = data.remote.port;\n\n\t\t\tself._connectWebSocket(data.token, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcb(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcb();\n\t\t\t});\n\t\t});\n \t});\n\n\treq.setHeader('Content-Type', 'application/json');\n\treq.write(JSON.stringify(options));\n\treq.end();\n\n\treturn this;\n};\n\nSocket.prototype._connectWebSocket = function (token, cb) {\n\tvar self = this;\n\n\tif (self._ws) {\n\t\tprocess.nextTick(function () {\n\t\t\tcb();\n\t\t});\n\t\treturn;\n\t}\n\n\tthis._ws = new WebSocket(getProxyOrigin() + getProxy().path + '/socket?token='+token);\n\tthis._handleWebsocket();\n\n\tif (cb) {\n\t\tself.on('connect', cb);\n\t}\n};\n\nSocket.prototype._handleWebsocket = function () {\n\tvar self = this;\n\n\tthis._ws.addEventListener('open', function () {\n\t\t//console.log('TCP OK');\n\n\t\tself._connecting = false;\n\t\tself.readable = true;\n\n\t\tself.emit('connect');\n\n\t\tself.read(0);\n\t});\n\tthis._ws.addEventListener('error', function (e) {\n\t\t// `e` doesn't contain anything useful (https://developer.mozilla.org/en/docs/WebSockets/Writing_WebSocket_client_applications#Connection_errors)\n\t\tconsole.warn('TCP error', e);\n\t\tself.emit('error', 'An error occured with the WebSocket');\n\t});\n\tthis._ws.addEventListener('message', function (e) {\n\t\tvar contents = e.data;\n\n\t\tvar gotBuffer = function (buffer) {\n\t\t\t//console.log('[tcp] received: ' + buffer.toString(), buffer.length);\n\t\t\tself.bytesRead += buffer.length;\n\t\t\tself.push(buffer);\n\t\t};\n\n\t\tif (typeof contents == 'string') {\n\t\t\tvar buffer = new Buffer(contents);\n\t\t\tgotBuffer(buffer);\n\t\t} else if (window.Blob && contents instanceof Blob) {\n\t\t\tvar fileReader = new FileReader();\n\t\t\tfileReader.addEventListener('load', function (e) {\n\t\t\t\tvar buf = fileReader.result;\n\t\t\t\tvar arr = new Uint8Array(buf);\n\t\t\t\tgotBuffer(new Buffer(arr));\n\t\t\t});\n\t\t\tfileReader.readAsArrayBuffer(contents);\n\t\t} else {\n\t\t\tconsole.warn('Cannot read TCP stream: unsupported message type', contents);\n\t\t}\n\t});\n\tthis._ws.addEventListener('close', function () {\n\t\tif (self.readyState == 'open') {\n\t\t\t//console.log('TCP closed');\n\t\t\tself.destroy();\n\t\t}\n\t});\n};\n\nexports.isIP = function (input) {\n\tif (exports.isIPv4(input)) {\n\t\treturn 4;\n\t} else if (exports.isIPv6(input)) {\n\t\treturn 6;\n\t} else {\n\t\treturn 0;\n\t}\n};\nexports.isIPv4 = function(input) {\n\treturn /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(input);\n};\nexports.isIPv6 = function(input) {\n\treturn /^(([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))$/.test(input);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}