{"ast":null,"code":"import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\nvar Sidebar = /*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n  function Sidebar(props) {\n    var _this;\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  var _proto = Sidebar.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n    return cancelDistanceOnScroll;\n  };\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n        return this.state.sidebarWidth;\n      }\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n  return Sidebar;\n}(Component);\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\nexport default Sidebar;","map":{"version":3,"names":["_objectSpread","_inheritsLoose","_assertThisInitialized","React","Component","PropTypes","CANCEL_DISTANCE_ON_SCROLL","defaultStyles","root","position","top","left","right","bottom","overflow","sidebar","zIndex","transition","WebkitTransition","willChange","overflowY","content","WebkitOverflowScrolling","overlay","opacity","visibility","backgroundColor","dragHandle","Sidebar","_Component","props","_this","call","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","cancelDistanceOnScroll","pullRight","Math","abs","width","offsetWidth","node","innerWidth","min","render","sidebarStyle","styles","contentStyle","overlayStyle","useTouch","rootProps","className","rootClassName","style","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","createElement","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","children","process","env","NODE_ENV","propTypes","isRequired","shape","object","string","bool","number","func","defaultProps"],"sources":["D:/Deneme/my-app/node_modules/react-sidebar/dist/react-sidebar.esm.js"],"sourcesContent":["import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}